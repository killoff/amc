<?php /** @var $this \Amc\Timetable\Block\Adminhtml\Order\Tab\Timetable */ ?>
<?php $resourcesAndEvents = $this->getResourcesAndEvents() ?>
<style>
    .timetable-state .parent {
        margin-top: 10px;
        font-size: 1.3em;
    }
    .timetable-state .child {
        margin-left: 20px;
        margin-top: 3px;
    }
    .timetable-state .who {
        margin-right: 10px;
        font-size: 1.1em;
    }
    .timetable-state .times {
        margin-left: 10px;
    }
    .timetable-state .time {
        margin-right: 15px;
        cursor: pointer;
        border-bottom: 1px dashed #006600;
    }
    .timetable-state .not-assigned {
        margin-left: 10px;
        color: #fe7834;
    }
</style>
<script>
    require([
        "moment",
        "jquery",
        "jquery/jquery-ui",
        "fullcalendar-scheduler-1.0.2/lib/fullcalendar.min",
        "fullcalendar-scheduler-1.0.2/scheduler"
    ], function(moment, $){

        $(function() { // document ready

            var getTimetableState = function(timetable) {

                var state = [],
                    stateRow,
                    stateRowEvents,
                    events,
                    resources = timetable.fullCalendar('getResources'),
                    resource,
                    i, j, k;
                for(i = 0; i < resources.length; i++) {
                    resource = resources[i];
                    stateRow = { title: resource.title, children: [] }
                    console.log('resource children:');
                    console.log(resource.children);
                    for(j = 0; j < resource.children.length; j++) {
                        stateRowEvents = [];
                        events = timetable.fullCalendar('getResourceEvents', resource.children[j]);
                        console.log('row events:');
                        console.log(events);
                        for(k = 0; k < events.length; k++) {
                            if (events[k].type == 'order') {
                                stateRowEvents.push(events[k]);
                            }
                        }
                        if (stateRowEvents.length > 0) {
                            stateRow.children.push( { title: resource.children[j].title, events: stateRowEvents } );
                        }
                    }
                    state.push( stateRow );
                }
                console.log(state);
                return state;
            };

            var renderTimetableState = function(state) {
                var i, j, k,
                    events,
                    html = '';
                for(i = 0; i < state.length; i++) {
                    html += '<div class="parent">'
                         + state[i].title
                         + (state[i].children.length == 0 ? '<span class="not-assigned">&ndash; not assigned</span>' : '')
                         + '</div>';

                    for(j = 0; j < state[i].children.length; j++) {
                        html += '<div class="child">'
                             + '<?php echo __('by') ?> ' + '<span class="who">' + state[i].children[j].title + '</span>';
                        events = state[i].children[j].events;
                        html += '<?php echo __('at') ?>';
                        html += '<span class="times">';
                        for(k = 0; k < events.length; k++) {
                            html += '<span class="time">' + events[k].start.format("ddd D.MM, HH:mm") + '</span>';
                        }
                        html.replace(/;$/g, '');
                        html += '</span>';
                        html += '</div>';
                    }
                }
                $('#timetable-state').html(html);
            };

            var uuid = function () {
                var i, random;
                var uuid = '';

                for (i = 0; i < 32; i++) {
                    random = Math.random() * 16 | 0;
                    if (i === 8 || i === 12 || i === 16 || i === 20) {
                        uuid += '-';
                    }
                    uuid += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random))
                        .toString(16);
                }

                return uuid;
            };

            var $timetable = $('#order-timetable');
            var registry = {};
//            var legend = [];
//            var resources = <?php //echo $resourcesAndEvents['resources'] ?>//;
//            for (var i =0; i < resources.length; i++) {
//
//            }

            $timetable.fullCalendar({
                defaultDate: '2016-01-02',
                editable: true,
                contentHeight: 'auto',
                scrollTime: '00:00',
                header: {
                    left: 'today prev,next',
                    center: 'title',
                    right: 'timelineDay,timelineThreeDays'
                },
                defaultView: 'timelineDay',
                views: {
                    timelineThreeDays: {
                        type: 'timeline',
                        duration: { days: 3 }
                    }
                },
                businessHours: {
                    start: '9:00',
                    end: '20:00',
                    dow: [ 1, 2, 3, 4, 5 ]
                },
                minTime: '09:00', // todo: impldement config "Working hours"
                maxTime: '20:00', // todo: impldement config "Working hours"
                slotLabelFormat: 'HH:mm',
                eventOverlap: true, // will cause the event to take up entire resource height
                resourceAreaWidth: '25%',
                resourceLabelText: "<?php echo $this->escapeQuote(__('Executant')) ?>",
                selectable: true,
                selectHelper: true,
                slotDuration: '00:15',
                slotWidth: 15,
                eventResize: function(event, delta, revertFunc) {
                    registry[event.id] = event;


                    var resource = $timetable.fullCalendar( 'getResourceById', event.resourceId );
//                    console.log(event);
//                    console.log(resource);
//                    id: "i2_u4"
//                    parent: Object
//                    title: "Узистов В."
//                    type: "user"
                    console.log(registry);
                    renderTimetableState(
                        getTimetableState($timetable)
                    );

                },
                eventDrop: function(event, delta, revertFunc) {
                    registry[event.id] = event;

                    renderTimetableState(
                        getTimetableState($timetable)
                    );
//                    alert(event.title + " was dropped on " + event.start.format()+ " - "+event.end.format());
//                    console.log(event);

//                    if (!confirm("Are you sure about this change?")) {
//                        revertFunc();
//                    }
                    console.log(registry);

                },
                select: function(start, end, event, calendar, resource) {
                    var eventData;
                    var resourceId = resource.id;
                    var resourceType = resource.type;
                    if (resourceId && resourceType === 'user') {
                        eventData = {
                            title: '', // time start - time end?
                            start: start,
                            end: end,
                            resourceId: resourceId,
                            id: uuid(),
                            type: 'order'
                        };
                        $timetable.fullCalendar('renderEvent', eventData, true); // stick? = true
                        registry[eventData.id] = eventData;
//                        console.log(eventData);
                        console.log(registry);
                        console.log($timetable.fullCalendar( 'getResourceEvents', resourceId ));
                        renderTimetableState(
                            getTimetableState($timetable)
                        );

                    }
                    $timetable.fullCalendar('unselect');
//                    console.log(event);
                },
                selectOverlap: function(event) {
                    console.log(event);
                    return event.rendering === 'background';
                },


                resources: <?php echo $resourcesAndEvents['resources'] ?>,
                events:  <?php echo $resourcesAndEvents['events'] ?>

//                    [
//                    {
//                        resourceId: 'c1',
//                        id: 'availableForMeeting',
//                        start: '2015-12-07T09:30:00',
//                        end: '2015-12-07T16:30:00',
//                        rendering: 'background',
//                        overlap: true,
//                        title: 'event 5'
//                    },
//                    {
//                        resourceId: 'c1',
//                        id: 'availableForMeetingNoe',
//                        start: '2015-12-07T11:30:00',
//                        end: '2015-12-07T13:30:00',
//                        rendering: 'background',
//                        color: '#ff9f89',
//                        overlap: false,
//                        selectable: false
//
//                    },
//
//                    {
//                        resourceId: 'a1',
//                        id: 'availableForMeeting',
//                        start: '2015-12-07T10:30:00',
//                        end: '2015-12-07T15:30:00',
//                        rendering: 'background',
//                        overlap: true,
//                        title: 'event 5'
//                    },
//                    {
//                        resourceId: 'a1',
//                        id: 'availableForMeetingNoe',
//                        start: '2015-12-07T10:30:00',
//                        end: '2015-12-07T12:00:00',
//                        rendering: 'background',
//                        color: '#ff9f89',
//                        overlap: false,
//                        selectable: false
//
//                    },
//                    {
//                        resourceId: 'a2',
//                        id: 'availableForMeeting',
//                        start: '2015-12-07T11:30:00',
//                        end: '2015-12-07T17:30:00',
//                        rendering: 'background',
//                        overlap: true,
//                        title: 'event 5'
//                    },
//                    {
//                        resourceId: 'a2',
//                        id: 'availableForMeetingNoe',
//                        start: '2015-12-07T14:30:00',
//                        end: '2015-12-07T16:30:00',
//                        rendering: 'background',
//                        color: '#ff9f89',
//                        overlap: false,
//                        selectable: false
//
//                    }
//
//                ]
            });

        });
    });
</script>
